name: Create VPS (Auto-Restart & Safe + Playit SSH)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 jam

    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v3

      - name: üìÅ Siapkan direktori
        run: mkdir -p links .backup

      - name: üíæ Restore backup (opsional)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            echo "Restore backup untuk $name..."
            unzip ".backup/$name.zip" -d . || echo "‚ö†Ô∏è Backup tidak ditemukan."
          fi

      - name: üîë Set password untuk runner
        run: echo "runner:passwordvps" | sudo chpasswd

      - name: üîê Mulai tmate session
        run: |
          sudo apt update -y && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" | tee "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}-tmate.txt"

      - name: üö™ Mulai playit.gg tunnel untuk SSH
        env:
          PLAYIT_TOML: ${{ secrets.PLAYIT_TOML }}
        run: |
          # Install playit-cli
          wget -O playit https://github.com/playit-cloud/playit-agent/releases/latest/download/playit-linux-amd64
          chmod +x playit

          # Simpan konfigurasi dari secret
          echo "$PLAYIT_TOML" > playit.toml

          # Jalankan playit agent (background)
          nohup ./playit &

          # Tunggu up (maks 20 detik)
          for i in {1..20}; do
            sleep 1
            if grep -q "Tunnel ready" playit.log || grep -q "forwarding" playit.log; then
              break
            fi
          done

          # Ambil info tunnel dari log atau file konfig
          PLAYIT_URL=$(grep -oE 'ssh [^ ]+@[0-9a-zA-Z\.\-]+ -p [0-9]+' playit.log | head -n1)
          if [ -z "$PLAYIT_URL" ]; then
            echo "‚ùå Playit tunnel gagal dibuat. Cek playit.log untuk detail."
            cat playit.log
            exit 1
          fi
          echo "Playit SSH Info: $PLAYIT_URL"
          echo "$PLAYIT_URL" | tee "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}-playit.txt"

      - name: üì¶ Save backup (user data only)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -r ".backup/$name.zip" . \
            -x "/usr/*" "/bin/*" "/lib/*" "/lib64/*" "/sbin/*" "/etc/*" "/var/*" \
            ".git/*" ".github/*" ".backup/*" || true

      - name: üì§ Push updated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "üîÅ Update SSH + backup untuk ${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: ‚è≥ Keep VPS alive (POSIX-safe loop)
        run: |
          i=1
          while [ $i -le 360 ]; do
            echo "üü¢ Running minute $i/360..."
            command sleep 60 || break
            i=$((i+1))
          done
